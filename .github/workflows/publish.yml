# Update and publish an app to staging or production

name: Publish content for the app

# Controls when the action will run.
on:
  workflow_dispatch:
    inputs:
      app:
        description: "Publish this app"
        required: true
      target:
        description: "Preview or Production"
        required: true
        type: choice
        options:
          - preprod
          - production
  repository_dispatch:
    types: [publish-app]

env:
  TARGET: ${{ github.event.client_payload.target || github.event.inputs.target }}
  TEAM: storytelling-studio
  CAST_PROJECT: ${{ github.event.client_payload.app || github.event.inputs.app }}
  CDN_AUTH: ${{ secrets.CDN_AUTH }}
  USAT_AUTH: ${{ secrets.USAT_AUTH }}
  USCP_AUTH: ${{ secrets.USCP_AUTH }}
  GAPI_CLIENT_EMAIL: ${{ secrets.GAPI_CLIENT_EMAIL }}
  GAPI_PRIVATE_KEY: ${{ secrets.GAPI_PRIVATE_KEY }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GCP_SA_KEY_B64: ${{ secrets.GCP_SA_KEY_B64 }}

defaults:
  run:
    shell: bash

jobs:
  publish:
    # The type of runner that the job will run on
    runs-on: [self-hosted, cloud-engineering, tools-low]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.TEAMS_WEBHOOK_COMMITS }}
          show-on-start: false
          card-layout-exit: cozy
      - name: Configure Vault Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.1.0
        with:
          url: https://vault.gannettdigital.com
          method: approle
          roleId: ${{ secrets.VAULT_APPROLE_ROLEID }}
          secretId: ${{ secrets.VAULT_APPROLE_SECRETID }}
          secrets: |
            secret/storytelling-studio/storytelling-studio-apps GAPI_CLIENT_EMAIL;
            secret/storytelling-studio/storytelling-studio-apps GAPI_PRIVATE_KEY;
            secret/storytelling-studio/storytelling-studio-apps GCP_PROJECT_ID;
            secret/storytelling-studio/storytelling-studio-apps GCP_SA_KEY;
            secret/storytelling-studio/storytelling-studio-apps GCP_SA_KEY_B64;
            secret/storytelling-studio/storytelling-studio-apps CDN_AUTH;
            secret/storytelling-studio/storytelling-studio-apps USAT_AUTH;
            secret/storytelling-studio/storytelling-studio-apps USCP_AUTH;
            secret/storytelling-studio/lab-microservices CONTENT_API_KEY;
            secret/storytelling-studio/storytelling-studio-apps MAPBOX_ACCESS_TOKEN;

      # AUTHORIZE GCLOUD HERE
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ env.GCP_SA_KEY_B64 }}

      # configure gcloud and gsutil
      - name: GCloud setup
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      # Add authentication for github packages
      - name: Github packages
        run: echo //npm.pkg.github.com/:_authToken=${{ secrets.PRIVATE_ACTION_TOKEN }} >> ~/.npmrc

      # install dependencies
      - name: install
        run: make install

      # update data from our Google Spreadsheet
      - name: update
        env:
          GAPI_PRIVATE_KEY: ${{ secrets.GAPI_PRIVATE_KEY }}
        run: make update

      # make the uw response
      - name: uw
        run: make uw

      # gut check by publishing to preview
      - name: publish:preprod
        run: make preprod

      # make it live
      - name: publish:production
        run: make publish
        if: ${{ env.TARGET == 'production' }}

        # Do soft purges on the cast project(s) we just uploaded
      - name: cache
        run: make cache
        if: ${{ env.TARGET == 'production' }}
        env:
          CAST_PROJECT: ${{ github.event.client_payload.app }}
